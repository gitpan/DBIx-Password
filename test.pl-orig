# Before `make install' is performed this script should be runnable with
# `make test'. After `make install' it should work as `perl test.pl'

######################### We start with some black magic to print on failure.

# Change 1..1 below to 1..last_test_to_print .
# (It may become useful if the test is moved to ./t subdirectory.)

BEGIN { $| = 1; print "1..1\n"; }
END {print "not ok 1\n" unless $loaded;}
use DBIx::Password;
$loaded = 1;
print "ok 1\n";

######################### End of black magic.

# Insert your test code below (better if it prints "ok 13"
# (correspondingly "not ok 13") depending on the success of chunk 13
# of the test code):
#PASSWORD_INSERT
print "##################Note!#########################\n";
print "If you are not on the machine that will be using \n";
print "these passwords this will most likely fail. \n";

print "Now, lets test getDriver() by itself\n";
print "Finding driver:" . DBIx::Password::getDriver($_) . "\n" 
	for (keys %$virtual1);

print "Now, lets see if we can make create objects\n";
while (my ($key, $val) = each %$virtual1) {	
	print "Trying: $key\n";
	my $object = DBIx::Password->connect($key);
	print "Finding driver:" . $object->getDriver() . "\n";
	$object->disconnect;
}
print "ok 2\n";
